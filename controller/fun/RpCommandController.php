<?php

namespace controller\fun;

use core\Controller;
use model\Hero;
use model\User;
use core\Response;

class RpCommandController extends Controller
{
    public static bool $isGlobal = true;

    private function rpOnBody($id, $text)
    {
        $user = new User($id);
        $response = new Response();
        $response->message = "{$this->user->getName()} $text {$user->getName('acc')}";
//            $response->message = "–¢—ã –Ω–∞ –∫–æ–≥–æ –±—ã–∫—É–µ—à—å, –ü—ë—Å, –±–∞–Ω –∑–∞—Ö–æ—Ç–µ–ª?";
        $response->peer_id = $this->peer->id;
        return $response;
    }

    private function checkSex($boy, $girl, $id = false)
    {
        if ($id !== false) {
            if ($id > 0)
            {
                if ($this->user->sex == 1)
                    return $this->rpOnBody($id, $girl);
                else
                    return $this->rpOnBody($id, $boy);
            }
        } else
        {
            if ($this->user->sex == 1)
                return $this->rpOnSelf($girl);
            else
                return $this->rpOnSelf($boy);
        }
        return new Response();
    }

    private function rpOnSelf($text)
    {
        $response = new Response();
        $response->message = "{$this->user->getName()} $text";
        $response->peer_id = $this->peer->id;
        return $response;
    }

    public function suicideAction(): Response
    {

        return $this->checkSex("–ø–æ–∫–æ–Ω—á–∏–ª —Å —Å–æ–±–æ–π", "–ø–æ–∫–æ–Ω—á–∏–ª–∞ —Å —Å–æ–±–æ–π");
    }

    public function inviteAction(): Response
    {
        return $this->checkSex("–ü–æ–∑–≤–∞–ª–∞ –Ω–∞ –ø–æ–º–æ—â—å", "–ø–æ–∑–≤–∞–ª –Ω–∞ –ø–æ–º–æ—â—å");
    }

    public function dressedAction(): Response
    {
        return $this->checkSex("–æ–¥–µ–ª—Å—è", "–æ–¥–µ–ª–∞—Å—å");
    }

    public function gameAction($user_text): Response
    {
        return $this->checkSex("–ø–æ–∏–≥—Ä–∞–ª $user_text", "–ø–æ–∏–≥—Ä–∞–ª–∞ $user_text");
    }

    public function sleepAction(): Response
    {
        return $this->checkSex("–ª—ë–≥ —Å–ø–∞—Ç—å", "–ª–µ–≥–ª–∞ —Å–ø–∞—Ç—å");
    }

    public function runAction($user_text): Response
    {
        return $this->checkSex("—É–±–µ–∂–∞–ª –≤ $user_text", "—É–±–µ–∂–∞–ª–∞ –≤ $user_text");
    }

    public function stalkAction(): Response
    {
        $hero = Hero::findById($this->user->id);
        $check = 0;
        if ($hero != false) {
            if ($hero->status == "–û—Ç–¥—ã—Ö") {
                if (($hero->stamina_tst - time()) <= 0 && $hero->stamina != $hero->max_stamina) {
                    while ($hero->stamina_tst - time() <= 0) {
                        $hero->stamina_tst = $hero->stamina_tst + 3600;
                        $hero->save();
                        $check++;
                    }
                    if ($check >= 1 && $check <= 5) {
                        $hero->stamina = $hero->stamina + $check;
                        $hero->save();
                        if ($hero->stamina > $hero->max_stamina) {
                            while ($hero->stamina == $hero->max_stamina) {
                                $hero->stamina = $hero->stamina - 1;
                            }
                        }
                    } else {
                        $hero->stamina = $hero->max_stamina;
                        $hero->save();
                    }
                }
                if ($hero->stamina != 0) {
                    $this->vk->messagesSend($this->peer->id, "–í—ã —É—à–ª–∏ –≤ —Ä–µ–π–¥.");
                    $hero->status = "–í —Ä–µ–π–¥–µ.";
                    $hero->stamina = $hero->stamina - 1;
                    $hero->last_stalk_tst = time();
                    $hero->save();
                    sleep(5);
                    if (round(($hero->stamina_tst + 3600 - time()) / 60, 0, PHP_ROUND_HALF_UP) != 60) {
                        $hero->stamina_tst = time();
                        $hero->save();
                    }
                    $rand = rand(1, 4);
                    $exp = round($hero->level * 1.6, 0, PHP_ROUND_HALF_UP);
                    $hero = Hero::findById($this->user->id);
                    $hero->status = "–û—Ç–¥—ã—Ö";
                    $hero->exp = $hero->exp + $exp;
                    $hero->gold = $hero->gold + $rand;
                    $hero->save();
                    return $this->checkSex("–ø—Ä–∏—à–µ–ª –∏–∑ —Ä–µ–π–¥–∞ –∏ –ø–æ–ª—É—á–∏–ª {$exp} –æ–ø—ã—Ç–∞, –Ω–∞–π–¥—è {$rand} –∑–æ–ª–æ—Ç–∞", "–ø—Ä–∏—à–ª–∞ –∏–∑ —Ä–µ–π–¥–∞ –∏ –ø–æ–ª—É—á–∏–ª–∞ {$exp} –æ–ø—ã—Ç–∞, –Ω–∞–π–¥—è {$rand} –∑–æ–ª–æ—Ç–∞");
                } else
                    return $this->checkSex("–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–∏–ª.", "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–∏–ª.");
            } else
                return $this->checkSex("–¢—ã —É–∂–µ –≤ —Ä–µ–π–¥–µ.", "–¢—ã —É–∂–µ –≤ —Ä–µ–π–¥–µ.");
        } else
            return $this->checkSex("–£—à–µ–ª –≤ —Ä–µ–π–¥", "–£—à–ª–∞ –≤ —Ä–µ–π–¥");
    }

    public function eatAction($user_text): Response
    {
        return $this->checkSex("—Å—ä–µ–ª $user_text", "—Å—ä–µ–ª–∞ $user_text –∏ —Å—Ç–∞–ª–∞ –∂–∏—Ä–Ω–æ–π:3");
    }

    public function sadAction(): Response
    {
        return $this->checkSex("–≥—Ä—É—Å—Ç–∏—Ç –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–∞—è –¥–µ–≤–æ—á–∫–∞", "–≥—Ä—É—Å—Ç–∏—Ç");
    }

    public function hurtAction(): Response
    {
        return $this->checkSex("–æ–±–∏–¥–µ–ª—Å—è –Ω–∞ –≤—Å–µ—Ö –∏ –µ–≥–æ –Ω–∞–¥–æ –±—ã –∫–∏–∫–Ω—É—Ç—å –∑–∞ —ç—Ç–æ", "–æ–±–∏–¥–µ–ª–∞—Å—å –Ω–∞ –≤—Å–µ—Ö:( —É—Å–ø–æ–∫–æ–π—Ç–µ –µ—ë");
    }

    public function riseAction(): Response
    {
        return $this->checkSex("–í–æ—Å–∫—Ä–µ—Å", "–í–æ—Å—Ç–∞–ª–∞ –∏–∑ –º—ë—Ä—Ç–≤—ã—Ö:3");
    }

    public function getAction($user_text): Response
    {
        return $this->checkSex("–∑–∞–≤—ë–ª $user_text", "–∑–∞–≤–µ–ª–∞ $user_text");
    }

    public function growAction($user_text): Response
    {
        return $this->checkSex("–æ—Ç—Ä–∞—Å—Ç–∏–ª $user_text", "–æ—Ç—Ä–∞—Å—Ç–∏–ª–∞ $user_text");
    }

    public function cockAction($user_text): Response
    {
        return $this->checkSex("–ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª $user_text", "–ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ $user_text, –∏ –ø–æ–ª—É—á–∏—é–ª–∞ –ª—é–ª–µ–π –æ—Ç –º—É–∂–∞...");
    }

    public function smashAction($user_text): Response
    {
        return $this->checkSex("—Ä–∞–∑–±–∏–ª $user_text", "—Ä–∞–∑–±–∏–ª–∞ $user_text, –∏ –ø–æ–ª—É—á–∏—é–ª–∞ –ª—é–ª–µ–π –æ—Ç –º—É–∂–∞...");
    }

    public function smokeAction($user_text): Response
    {
        return $this->checkSex("–ø–æ–∫—É—Ä–∏–ª $user_text", "–ø–æ–∫—É—Ä–∏–ª–∞ –∏ —á—É—Ç—å –Ω–µ —Å–¥–æ—Ö–ª–∞");
    }

    public function danceAction($user_text): Response
    {
        return $this->checkSex("—Å—Ç–∞–Ω—Ü–µ–≤–∞–ª $user_text", "–°—Ç–∞–Ω—Ü–µ–≤–∞–ª–∞ $user_text");
    }

    public function lookAction(): Response
    {
        return $this->checkSex("—Å–µ–ª –Ω–∞–±–ª—é–¥–∞—Ç—å, –ø—Ä–∏–Ω–µ—Å–∏—Ç–µ –∫—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–ø–∫–æ—Ä–Ω", "—Å–µ–ª–∞ –Ω–∞–±–ª—é–¥–∞—Ç—å –∏ –∂—Ä—ë—Ç –ø–æ–ø–∫–æ—Ä–Ω –≤ –æ–¥–Ω—É —Ö–∞—Ä—é");
    }

    public function kaifAction(): Response
    {
        return $this->checkSex("–ø–æ–¥—Ä–æ—á–∏–ª –∏ —á—É—Ç—å –Ω–µ –∫–æ–Ω—á–∏–ª", "–ø–æ–¥—Ä–æ—á–∏–ª–∞ —á–µ–ª—É –Ω–∞–ø—Ä–æ—Ç–∏–≤üò±");
    }

    public function kaifReadyAction()
    {
        if ($this->user->id == '91737880' || $this->user->id == '338896450')
            return $this->checkSex("–∫–æ–Ω—á–∏–ª —É–≤–∏–¥–µ–≤ –Ω–æ–∂–∫–∏ –ö–æ–ª–µ–Ω—å–∫–∏:P  ", "–∞ –Ø –Ω–µ —Ç–µ–∫—É, —è –¥—Ä–æ—á—É)");
        else
            return $this->checkSex("–∫–æ–Ω—á–∏–ª —á—Ç–æ –∞–∂ –¥–æ—Å—Ç–∞–ª –¥–æ –ø–æ—Ç–æ–ª–∫–∞", "–∫–æ–Ω—á–∏–ª–∞ –≤–º–µ—Å—Ç–µ —Å —Ç–µ–º –∫–æ–º—É –¥—Ä–æ—á–∏–ª–∞ :P ");
    }

    public function shelterAction(): Response
    {
        return $this->checkSex("—Å–ø—Ä—è—Ç–∞–ª—Å—è –æ—Ç–æ –≤—Å–µ—Ö", "—Å–ø—Ä—è—Ç–∞–ª–∞—Å—å, –Ω–æ –±–æ—Ç –∑–Ω–∞–µ—Ç –≥–¥–µ –æ–Ω–∞ ^_^");
    }

    public function drownsAction(): Response
    {
        return $this->checkSex("—É—Ç–æ–Ω—É–ª –≤ –∫–∞–Ω–∞–≤–µ.", "–ü—Ä—ã–≥–Ω—É–ª–∞ –≤ –æ–∑–µ—Ä–æ –∏ –Ω–µ —Å–º–æ–≥–ª–∞ —É—Ç–æ–Ω—É—Ç—å, –∏–±–æ –æ–Ω–æ –≤—ã—à–ª–æ –∏–∑ –±–µ—Ä–µ–≥–æ–≤^_^");
    }

    public function foldAction(): Response
    {
        return $this->checkSex("—Å–±—Ä–æ—Å–∏–ª—Å—è —Å –∫—Ä—ã—à–∏ –¥–æ–º–∞", "—Å–±—Ä–æ—Å–∏–ª–∞—Å—å —Å –∫—Ä—ã—à–∏ –¥–æ–º–∞");
    }

    public function LowKissAction($object): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—á–º–æ–∫–Ω—É–ª –≤ —â–µ—á–∫—É ", "–Ω–µ–∂–Ω–æ —á–º–æ–∫–Ω—É–ª–∞ ", $id);
    }

    public function TrahAction($object): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—á–ø–æ–∫–Ω—É–ª –∫–∏—Å–∫—É –ø–æ –∏–º–µ–Ω–∏ ", "—á–ø–æ–∫–Ω—É–ª–∞ ", $id);
    }

    public function dieAction(): Response
    {
        return $this->checkSex("—É–º–µ—Ä –≤ —É–∂–∞—Å–Ω—ã—Ö –º—É–∫–∞—Ö", "—É–º–µ—Ä–ª–∞ –∏ –æ –Ω–µ–π  –≤—Å–µ –∑–∞–±—ã–ª–∏:(");
    }

    public function DressAction($user_text, $object): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–æ–¥–µ–ª $user_text –Ω–∞", "–æ–¥–µ–ª–∞ $user_text –Ω–∞", $id);
    }

    public function DonAction($user_text): Response
    {
        return $this->checkSex("–Ω–∞–¥–µ–ª $user_text", "–Ω–∞–¥–µ–ª–∞ $user_text –∏ –æ—Ç–¥–∞–ª–∞—Å—å —Å–ª—É—á–∞–π–Ω–æ–º—É –ø—Ä–æ—Ö–æ–∂–µ–º—É:((99(((");
    }

    public function DrinkAction($user_text): Response
    {
        if ($user_text != "–≤–æ–¥–∫—É")
            return $this->checkSex("–≤—ã–ø–∏–ª $user_text –∏ –≤—Ä–æ–¥–µ –±—ã –∂–∏–≤", "–≤—ã–ø–∏–ª–∞ $user_text –∏ –æ–±—Å–æ–ª—é—Ç–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ:))");
        else
            return $this->checkSex("–≤—ã–ø–∏–ª $user_text –∏ –Ω–∞–±—É—Ö–∞–ª—Å—è –¥–æ –æ—Ç–∫–ª—é—á–∫–∏. –ö–æ–≥–¥–∞ –∂–µ –µ–≥–æ –æ—Ç–∫–∞—á–∞—é—Ç?", "–≤—ã–ø–∏–ª–∞ $user_text –∏ –æ—Ç–¥–∞–ª–∞—Å—å —Å–ª—É—á–∞–π–Ω–æ–º—É –ø—Ä–æ—Ö–æ–∂–µ–º—É:((99(((");
    }

    public function slapAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—à–ª–µ–ø–Ω—É–ª $user_text", "–æ—Ç—à–ª–µ–ø–∞–ª–∞ $user_text", $id);
    }

    public function beatAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—É–¥–∞—Ä–∏–ª $user_text", "—É–¥–∞—Ä–∏–ª–∞ $user_text", $id);
    }

    public function TakeAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∑–∞–±—Ä–∞–ª $user_text —É", "–∑–∞–±—Ä–∞–ª–∞ $user_text —É", $id);
    }

    public function KillAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—É–±–∏–ª $user_text", "—É–±–∏–ª–∞ $user_text", $id);
    }

    public function superKissAction($object): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∑–∞—Å–æ—Å–∞–ª –Ω–µ –ø–æ–ª—É—á–∏–≤ –ø–æ –ª–∏—Ü—É –æ—Ç", "—Ö–æ—Ç–µ–ª–∞ –± –ø–æ—Å–æ—Å–∞—Ç—å—Å—è —Å", $id);
    }

    public function sendAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ—Å–ª–∞–ª $user_text", "–ø–æ—Å–ª–∞–ª–∞ $user_text", $id);
    }

    public function TouchAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ–ª–∞–ø–∞–ª $user_text –Ω–µ –ø–æ–ª—É—á–∏–≤ –ø–æ –ª–∏—Ü—É –æ—Ç", "–ø–æ–ª–∞–ø–∞–ª–∞ $user_text, –∞ –ø–æ—Å–ª–µ –ø–æ—Å–æ—Å–∞–ª–∞—Å—å", $id);
    }

    public function UndressAction($object): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Ä–∞–∑–¥–µ–ª, OH MY GOD", "—Ä–∞–∑–¥–µ–ª–∞, –Ω–æ —É–≤–∏–¥–µ–ª–∞ –ª–∏—à—å –∂–∏—Ä–Ω–µ–Ω—å–∫–∏–π –∂–∏–≤–æ—Ç–∏–∫:(", $id);
    }

    public function superBeatAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—É–µ–±–∞–ª $user_text", "—É–µ–±–∞–ª–∞ $user_text", $id);
    }

    public function superSexiAction($object): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∂–µ—Å—Ç–∫–∞ —Ç—Ä–∞—Ö–Ω—É–ª", "—Ç—Ä–∞—Ö–Ω—É–ª–∞ –≤ –æ—á–∫–æ", $id);
    }

    public function eatingAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ–∫–æ—Ä–º–∏–ª $user_text", "–ø–æ–∫–æ—Ä–º–∏–ª–∞ $user_text", $id);
    }

    public function buryAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∑–∞–∫–æ–ø–∞–ª", "–∑–∞–∫–æ–ø–∞–ª–∞", $id);
    }

    public function strokeAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ–≥–ª–∞–¥–∏–ª $user_text", "–ø–æ–≥–ª–∞–¥–∏–ª–∞ $user_text", $id);
    }

    public function shootAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∑–∞—Å—Ç—Ä–µ–ª–∏–ª $user_text", "–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞—Å—Ç—Ä–µ–ª–∏—Ç—å $user_text, –æ–ø–ø–æ–Ω–µ–Ω—Ç –≤—ã—Ö–≤–∞—Ç–∏–ª –æ—Ä—É–∂–∏–µ", $id);
    }

    public function KusAction($object)
    {
        $id = $this->getIdFromMessage($object);
        $x = rand(0, 1);
        if ($x == 1)
            return $this->checkSex("—Å–¥–µ–ª–∞–ª –∫—É—Å—å", "—Å–¥–µ–ª–∞–ª –Ω–µ–∂–Ω—ã–π –∫—É—Å—å", $id);
        else
            return $this->checkSex("—Å–¥–µ–ª–∞–ª —Å–∏–ª—å–Ω—ã–π –∫—É—Å—å", "—Å–¥–µ–ª–∞–ª —Å–∏–ª—å–Ω—ã–π –∫—É—Å—å", $id);
    }

    public function superKusAction($object, $user_text): Response
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Å–∏–ª—å–Ω–æ —É–∫—É—Å–∏–ª $user_text", "—Å–∏–ª—å–Ω–æ —É–∫—É—Å–∏–ª–∞ $user_text", $id);
    }

    public function ShootsAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Ä–∞—Å—Å—Ç—Ä–µ–ª—è–ª ", "–ø—Ä–∞—Å—Å—Ç—Ä–µ–ª—è–ª–∞", $id);
    }

    public function SexAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–Ω–∞–≥–ª–æ —Ç—Ä–∞—Ö–Ω—É–ª", "–ø–æ–ø—Ä—ã–≥–∞–ª–∞ –Ω–∞ ", $id);
    }

    public function superSexAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª —á–µ–ª–æ–≤–µ–∫–∞ –∏ —Å–µ–ª –∑–∞ —Ä–µ—à—ë—Ç–∫—É:( –ü–æ–º—è–Ω–µ–º. –ü–æ–¥–±–æ–¥—Ä–∏—Ç–µ", "–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª–∞, –Ω–æ —É–≤—ã 21 –≤–µ–∫....", $id);
    }

    public function toxicAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–Ω–µ –æ–±—Ä–æ–Ω–∏–≤ –Ω–∏ —Å–ª–µ–∑–∏–Ω–∫–∏ –æ—Ç—Ä–∞–≤–∏–ª", "–æ—Ç—Ä–∞–≤–∏–ª–∞, —Å–µ–≤ –Ω–∞ –ª–∏—Ü–æ", $id);
    }

    public function kissAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ—Ü–µ–ª–æ–≤–∞–ª", "–∑–∞—Å–æ—Å–∞–ª–∞", $id);
    }

    public function SellAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø—Ä–æ–¥–∞–ª", "–ø—Ä–æ–¥–∞–ª–∞", $id);
    }

    public function shoveAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–∏—Ö–Ω—É–ª —á–ª–µ–Ω –≤", "–∑–∞–ø–∏—Ö–Ω—É–ª–∞", $id);
    }

    public function GiveAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ–¥–∞—Ä–∏–ª $user_text ", "–ø–æ–¥–∞—Ä–∏–ª–∞ $user_text", $id);
    }

    public function ListenAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—É—Å–ª—ã—à–∞–ª –∫–∞–∫ —Å—Ç–æ–Ω–µ—Ç ", "—É—Å–ª—ã—à–∞–ª–∞ —Å—Ç–æ–Ω—ã", $id);
    }

    public function SuperKickAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Å–∏–ª—å–Ω–æ –ø–∏–∑–¥–∞–Ω—É–ª", "—Å–∏–ª—å–Ω–æ –ø–∏–∑–¥–∞–Ω—É–ª–∞", $id);
    }

    public function tickleAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∑–∞—â–µ–∫–æ—Ç–∞–ª –¥–æ—Å–º–µ—Ç—Ä–∏", "–∑–∞—â–µ–∫–æ—Ç–∞–ª–∞ –¥–æ—Å–º–µ—Ç—Ä–∏", $id);
    }

    public function BurnAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Å–∂—ë–≥ –∑–∞–∂–∏–≤–æ", "–º—Å—Ç—è –∑–∞ 15-17 –≤–µ–∫–∞, —Å–æ–∂–≥–ª–∞ –Ω–∞ –∫–æ—Å—Ç—Ä–µ", $id);
    }

    public function PayAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–æ—Ç–¥–∞–ª $user_text ", "–æ—Ç–¥–∞–ª–∞ $user_text —É ", $id);
    }

    public function StealAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—É–∫—Ä–∞–ª $user_text —É", "—É–∫—Ä–∞–ª–∞ $user_text —É ", $id);
    }

    public function GagAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ó–∞—Ç–∫–Ω—É–ª ", "–ó–∞—Ç–∫–Ω—É–ª–∞ ", $id);
    }

    public function LickAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–æ—Ç–ª–∏–∑–∞–ª, –Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–∏–ª –Ω–∏—á–µ–≥–æ –æ—Ç ", "–æ—Ç–ª–∏–∑–∞–ª–∞ —É ", $id);
    }

    public function SuckAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–æ—Ç—Å–æ—Å–∞–ª —É ", "–æ—Ç—Å–æ—Å–∞–ª–∞ –∑–∞ –∞–¥–º–∏–Ω–∫—É —É ", $id);
    }

    public function ResurrectAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–≤–æ—Å–∫—Ä–µ—Å–∏–ª", "–≤–æ—Å–∫—Ä–µ—Å–∏–ª–∞ ", $id);
    }

    public function BindAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Å–≤—è–∑–∞–ª –∏ –ø–æ–Ω—ë—Å –Ω–∞ –∫—Ä–æ–≤–∞—Ç–∫—É ", "—Å–≤—è–∑–∞–ª–∞  ", $id);
    }

    public function hugAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∫—Ä–µ–ø–∫–∞ –æ–±–Ω—è–ª", "–Ω–µ–∂–Ω–æ –æ–±–Ω—è–ª–∞ ", $id);
    }

    public function bustAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∞—Ä–µ—Å—Ç–æ–≤–∞–ª –∑–∞ —Å–µ–∫—Å–∏–∑–º", "–ø—ã—Ç–∞–ª–∞—Å—å –∞—Ä–µ—Å—Ç–æ–≤–∞—Ç—å, –Ω–æ —Å–∞–º–∞ –ø–æ–ø–∞–ª–∞ –∑–∞ —Ä–µ—à—ë—Ç–∫—É –∫ ", $id);
    }

    public function plantAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ—Å–∞–¥–∏–ª $user_text", "–ø–æ—Å–∞–¥–∏–ª–∞ $user_text", $id);
    }

    public function hidetAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Å–ø—Ä—è—Ç–∞–ª $user_text", "—Å–ø—Ä—è—Ç–∞–ª–∞ $user_text", $id);
    }

    public function carryAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—É–Ω—ë—Å –Ω–∞ —Ä—É—á–∫–∞—Ö ", "—É–Ω–µ—Å–ª–∞, –¥—É–º–∞—è —á—Ç–æ –æ–Ω –≤–∫—É—Å–Ω—ã–π –∏ –Ω–µ —Å—Ç–∞–Ω–µ—Ç –∂–∏—Ä–Ω–æ–π ", $id);
    }

    public function pokeAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Ç—ã–∫–Ω—É–ª", "—Ç—ã–∫–Ω—É–ª–∞", $id);
    }

    public function pinchAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—É—â–∏–ø–Ω—É–ª", "—É—â–∏–ø–Ω—É–ª–∞", $id);
    }

    public function fastenAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø—Ä–∏—Å—Ç–µ–≥–Ω—É–ª $user_text", "–ø—Ä–∏—Å—Ç–µ–≥–Ω—É–ª–∞ $user_text", $id);
    }

    public function strangleAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∑–∞–¥—É—à–∏–ª $user_text", "–∑–∞–¥—É—à–∏–ª–∞ $user_text", $id);
    }

    public function drownAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø—ã—Ç–∞–ª—Å—è —É—Ç–æ–ø–∏—Ç—å, –Ω–æ –ø–æ–Ω—è–ª —á—Ç–æ —É–∂–µ –Ω–µ–≥–¥–µ —ç—Ç—É ", "—É—Ç–æ–ø–∏–ª–∞", $id);
    }

    public function throwAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–∫–∏–Ω—É–ª $user_text –≤", "–∫–∏–Ω—É–ª–∞ $user_text –≤", $id);
    }

    public function punchAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–¥–∞–ª –ø–æ–¥–∂–æ–ø–Ω–∏–∫ ", "—Å–ª–æ–º–∞–≤ –Ω–æ–≥—É –ø–Ω—É–ª–∞", $id);
    }

    public function cuddleAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ—Ç–∏—Å–∫–∞–ª $user_text", "–ø–æ—Ç–∏—Å–∫–∞–ª–∞ $user_text", $id);
    }

    public function haveAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–≤–∑—è–ª $user_text", "–≤–∑—è–ª–∞ $user_text", $id);
    }

    public function spitAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–ª—é–Ω—É–ª –≤", "–ø–ª—é–Ω—É–ª–∞ –Ω–∞", $id);
    }

    public function castrateAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ–ø—ã—Ç–∞–ª—Å—è –∫–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å", "–Ω–µ –æ–±—Ä–æ–Ω–∏–≤ –Ω–∏ —Å–ª–∏–∑–µ–Ω–∫–∏ –∫–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞", $id);
    }

    public function callAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–ø–æ–∑–≤–æ–Ω–∏–ª $user_text", "–ø–æ–∑–≤–æ–Ω–∏–ª–∞ $user_text", $id);
    }

    public function warmAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("—Å–æ–≥—Ä–µ–ª $user_text", "—Å–æ–≥—Ä–µ–ª–∞ $user_text", $id);
    }

    public function superLickAction($object)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–æ–±–ª–∏–∑–∞–ª —è–∑—ã–∫–æ–º –≤—Å—ë —Ç–µ–ª–æ ", "–æ–±–ª–∏–∑–∞–ª–∞ –ø—Ä–µ—Å—Å", $id);
    }

    public function helpAction($object, $user_text)
    {
        $id = $this->getIdFromMessage($object);
        return $this->checkSex("–≤—ã–ª–µ—á–∏–ª $user_text", "–≤—ã–ª–µ—á–∏–ª–∞ $user_text", $id);
    }

    public function ShootsAllAction()
    {
        $response = new Response();
        $response->peer_id = $this->peer->id;
        $response->message = '–í–∞—Å —Ä–∞—Å—Å—Ç—Ä–µ–ª—è–ª–∏! @all';
        return $response;
    }

    public function sexAllAction()
    {
        $response = new Response();
        $response->peer_id = $this->peer->id;
        $response->message = '–í–∞—Å —Ç—Ä–∞—Ö–Ω—É–ª–∏! @all';
        return $response;
    }

    public function killAllAction()
    {
        $response = new Response();
        $response->peer_id = $this->peer->id;
        $response->message = '–í–∞—Å —É–±–∏–ª–∏! @all';
        return $response;
    }

    public function burnAllAction()
    {
        $response = new Response();
        $response->peer_id = $this->peer->id;
        $response->message = '–í–∞—Å —Å–æ–∂–≥–ª–∏! @all';
        return $response;
    }

    public function bustAllAction()
    {
        $response = new Response();
        $response->peer_id = $this->peer->id;
        $response->message = '–í–∞—Å –∞—Ä–µ—Å—Ç–æ–≤–∞–ª–∏! @all';
        return $response;
    }
}